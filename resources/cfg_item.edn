;; This file is describing all configuration items.
;; Code specific platform stands in `os` subdir.
{:androidstudio
 {:cask true, :formula "android-studio", :os :macos, :package-manager :brew},
 :apt {:cfg-version-cmds [],
       :check-cmds [],
       :clean-cmds [["sudo" "apt" "autoremove"]],
       :init-cmds [],
       :install-cmds [],
       :package-manager :manual,
       :update-cmds [["sudo" "apt" "update"] ["sudo" "apt" "full-upgrade"]]},
 :brew {:check-cmds [["brew" "doctor"]],
        :description "Brew installation and global tasks",
        :install-cmds
        [["mkdir" "-p" "tmp/brew"]
         ["curl" "-fsSL"
          "https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"
          "-o" "tmp/brew/brew-install.sh"]
         ["chmod" "+x" "tmp/brew/brew-install.sh"]
         ["echo" "You need to connect as admin to install brew"]
         ["tmp/brew/brew-install.sh"]],
        :package-manager :manual,
        :update-cmds [["brew" "update"]]},
 :c-project {:package-manager :manual,
             :pre-reqs {:gcc [{:formula "gcc", :package-manager :brew}]}},
 :clever [{:npm-deps ["clever-tools"], :os :ubuntu, :package-manager :npm}
          {:formula "clever-tools",:package-manager :brew,
           ;;TODO os is removed to be able to run on macos
           :tap "clevercloud/tap"}],
 :clojure-project
 {:package-manager :manual,
  :pre-reqs {:clj-kondo {:formula "borkdude/brew/clj-kondo",
                         :package-manager :brew,
                         :tap "borkdude/brew",
                         :tmp-dirs [".clojure/.clj-kondo/.cache"]},
             :cljfmt {:npm-deps ["node-cljfmt"]
                      :package-manager :npmw}
             :clojure {:cfg-files ["~/.clojure/deps.edn"],
                       :formula "clojure",
                       :package-manager :brew,
                       :tmp-dirs [".clojure/.cpcache" ".m2/repository"]},
             :jq {:formula "jq", :package-manager :brew},
             :lein {:formula "leiningen", :package-manager :brew},
             :openjdk {:formula "openjdk", :package-manager :brew},
             :rlwrap {:formula "rlwrap", :package-manager :brew},
             :shadow-cljs {:cfg-files ["~/.shadow-cljs/config.edn"],
                           :npm-deps ["shadow-cljs"],
                           :package-manager :npm},
             :tools-clojure {:cfg-files ["~/.clojure/tools/tools.edn"],
                             :formula "clojure/tools/clojure",
                             :package-manager :brew,
                             :tap "clojure/tools"},
             :tree-sitter {:formula "tree-sitter", :package-manager :brew}}},
 :curl {:os :ubuntu, :package-manager :manual},
 :docker
 {:package-manager :manual,
  :pre-reqs
  {:dockfmt {:deps [:go],
             :install-cmds [["go" "install"
                             "github.com/jessfraz/dockfmt@latest"]],
             :package-manager :manual},
   :dockutil {:formula "dockutil", :os :macos, :package-manager :brew}}},
 :doom
 {:cfg-files ["~/.config/doom/config.el" "~/.config/doom/custom.el"
              "~/.config/doom/init.el" "~/.config/doom/packages.el"
              "~/.config/doom/snippets"],
  :cfg-version-cmds [["doom" "info"]],
  :check-cmds [["doom" "doctor"]],
  :clean-cmds [["doom" "gc"]],
  :deps [:git],
  :install-cmds [["git" "clone" "--depth" "1"
                  "https://github.com/doomemacs/doomemacs" "~/.config/emacs"]
                 ["~/.config/emacs/bin/doom" "install"]],
  :package-manager :manual,
  :pre-reqs
  {:aspell [{:formula "aspell", :package-manager :brew}],
   :black {:formula "black", :package-manager :brew},
   :cljfmt {:npm-deps ["node-cljfmt"], :package-manager :npm},
   :clojure-lsp-native [{:formula "clojure-lsp/brew/clojure-lsp-native",
                         :package-manager :brew,
                         :tap "clojure-lsp/brew",
                         :tmp-dirs [".clojure/.lsp/.cache"
                                    ".cache/clojure-lsp"]}],
   :cmake {:cask true, :formula "cmake", :os :macos, :package-manager :brew},
   :cmake-docs {:formula "cmake-docs", :package-manager :brew},
   :emacs
   [{:description
     "# See https://github.com/d12frosted/homebrew-emacs-plus for more details, may be emacs-plus@28 emacs-plus@29",
     :formula "emacs-plus@29",
     :install-options ["--with-imagemagick" "--with-native-comp"],
     :os :macos,
     :package-manager :brew,
     :pre-reqs {:imagemagick [{:formula "imagemagick",
                               :package-manager :brew}]},
     :tap "d12frosted/emacs-plus"}
    {:formula "emacs", :os :ubuntu, :package-manager :brew}],
   :fd [{:formula "fd", :package-manager :brew}],
   :graphviz [{:formula "graphviz", :package-manager :brew}],
   :js-beautify [{:npm-deps ["js-beautify"], :package-manager :npm}],
   :ktlint [{:formula "ktlint", :package-manager :brew}],
   :openjpeg [{:formula "openjpeg", :package-manager :brew}],
   :ripgrep [{:formula "ripgrep", :package-manager :brew}],
   :shellcheck [{:formula "shellcheck", :package-manager :brew}],
   :shfmt [{:formula "shfmt", :package-manager :brew}],
   :stylelint [{:npm-deps ["stylelint"], :package-manager :npm}],
   :stylelint-config-standard [{:npm-deps ["stylelint-config-standard"],
                                :package-manager :npm}],
   :tidy-html5 [{:formula "tidy-html5", :package-manager :brew}],
   :zprint [{:cask true,
             :cfg-files ["~/.zprintrc"],
             :formula "zprint",
             :os :macos,
             :package-manager :brew,
             :tmp-dirs [".zprint/urlcache"]}]},
  :update-cmds [["doom" "upgrade"]]},
 :ffmpeg {:formula "ffmpeg", :package-manager :brew},
 :gimp {:cask true, :formula "gimp", :os :macos, :package-manager :brew},
 :git {:cfg-files ["~/.gitconfig"],
       :formula "git",
       :package-manager :brew,
       :pre-reqs {:gd [{:formula "gd", :package-manager :brew}],
                  :git-lfs [{:formula "git-lfs", :package-manager :brew}]}},
 :github {:cfg-files ["~/.config/gh/hosts.yml" "~/.config/gh/config.yml"],
          :description "Github cli",
          :package-manager :manual},
 :glpk {:install-cmds [["mkdir" "-p" "tmp/glpk"]
                       ["wget" "http://ftp.gnu.org/gnu/glpk/glpk-5.0.tar.gz"
                        "-P" "tmp/glpk"]
                       ["tar" "-xzf" "tmp/glpk/glpk-5.0.tar.gz" "-C" "tmp/glpk"]
                       ["tmp/glpk/glpk-5.0/configure"]],
        :package-manager :manual},
 :go {:formula "go", :package-manager :brew},
 :iterm2 {:cask true,
          :cfg-files ["~/Library/Preferences/com.googlecode.iterm2.plist"],
          :formula "iterm2",
          :os :macos,
          :package-manager :brew,
          :pre-reqs {:coreutils [{:formula "coreutils",
                                  :package-manager :brew}],
                     :grep [{:formula "grep", :package-manager :brew}],
                     :htop [{:formula "htop", :package-manager :brew}],
                     :tmux [{:formula "tmux", :package-manager :brew}],
                     :tree [{:formula "tree", :package-manager :brew}]}},
 :macos {:clean-cmds [["fd" "-H" "-I" "-g" "'**/.DS_Store'" "-x" "rm" "{}"]],
         :package-manager :manual},
 :markdown {:formula "markdown", :package-manager :brew},
 :node {:formula "node", :package-manager :brew},
 :npm {:formula "npm", :package-manager :brew},
 :obs {:cask true, :formula "obs", :os :macos, :package-manager :brew},
 :oh-my-zsh {:cfg-files ["~/.zshrc"],
             :cfg-version-cmds [["omz" "version"]],
             :install-cmds [["curl" "-fsSL"
                             "https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh" "-o"
                             "tmp/ohmyzsh-install.sh"] ["chmod" "+x" "tmp/ohmyzsh-install.sh"]
                            ["rm" "-f" "~/.oh-my-zsh"] ["tmp/ohmyzsh-install.sh"]],
             :package-manager :manual,
             :pre-reqs {:zsh {:formula "zsh",
                              :package-manager :brew,
                              :pre-reqs {:typewritten
                                         {:npm-deps ["typewritten"], :package-manager :npm},
                                         :zsh-completions
                                         {:formula "zsh-completions", :package-manager :brew}}}
                        :zsh-integration {:package-manager :manual
                                          :install-cmds [["curl" "-L" "https://iterm2.com/shell_integration/zsh" "-o" "~/.iterm2_shell_integration.zsh"]]}},
             :update-cmds [["omz" "update"]]},
 :os {:package-manager :manual},
 :os-network [{:cfg-files ["/etc/hosts" "/etc/ssh/ssh_config"
                           "/etc/ssh/sshd_config"],
               :description "System network for macos",
               :os :macos,
               :package-manager :manual}],
 :python {:formula "python-setuptools", :package-manager :brew},
 :security-tools
 {:description "What is necessary to manage security keys",
  :package-manager :manual,
  :pre-reqs {:gnupg {:formula "gnupg", :package-manager :brew},
             :ssh-keygen {:cfg-files ["/etc/ssh/ssh_config"],
                          :init-cmds
                          [["ssh-keygen" "-t" "rsa" "-b" "4096" "-C"
                            "anthony@caumond.com"] ["cat" "~/.ssh/id_rsa.pub"]
                           ["ssh-copy-id" "anthony@fix-computer -p 24736"]],
                          :package-manager :manual}}},
 :vim {:formula "vim", :package-manager :brew},
 :vlc {:cask true, :formula "vlc", :os :macos, :package-manager :brew},
 :wget {:formula "wget", :package-manager :brew},
 :zsh-env {:cfg-version-cmds [["zsh" "--version"]],
           :deps [:zsh],
           :package-manager :manual,
           :update-cmds [["doom" "env"]]}}
