;; This file is describing all configuration items
;; All code here in [`:update`] keys should be cross platform
;; If you have code specific platform, you can use their `os` subdir
{:androidstudio {:formula "androidstudio"},
 :brew {:check [["brew" "doctor"]],
        :description "Brew installation and global tasks",
        :install
          [["curl" "-fsSL"
            "https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"
            "-o" "brew-install.sh"] ["chmod" "+x" "brew-install.sh"]
           ["echo" "You need to connect as admin to install brew"]
           ["./brew-install.sh"] ["rm" "./brew-install.sh"]],
        :update [["brew" "update"]]},
 :clojure-project
   {:pre-reqs {:clj-kondo {:formula "borkdude/brew/clj-kondo",
                           :tmp-dirs [".clojure/.clj-kondo/.cache"]},
               :clojure {:formula "clojure",
                         :tmp-dirs [".clojure/.cpcache" ".m2/repository"]},
               :jq {:formula "jq"},
               :openjdk {:formula "openjdk"},
               :rlwrap {:formula "rlwrap"},
               :tools-clojure {:formula "clojure/tools/clojure"}}},
 :doom
   {:check [["doom" "doctor"]],
    :clean [["doom" "clean"] ["doom" "purge" "-g"]],
    :install [["git" "clone" "--depth" "1"
               "https://github.com/doomemacs/doomemacs" "~/.config/emacs"]
              ["doom" "install"]],
    :pre-reqs
      {:black {:package "black", :type :pip3},
       :clojure-lsp-native {:formula "clojure-lsp/brew/clojure-lsp-native",
                            :tmp-dirs [".clojure/.lsp/.cache"
                                       ".cache/clojure-lsp"]},
       :cmake {:formula "cmake"},
       :emacs
         {:doc
            "# See https://github.com/d12frosted/homebrew-emacs-plus for more details",
          :formula "emacs-plus --with-imagemagick --with-native-comp",
          :tap "d12frosted/emacs-plus"},
       :fd {:formula "fd"},
       :graphviz {:formula "graphviz"},
       :ktlint {:formula "ktlint"},
       :ripgrep {:formula "ripgrep"},
       :shfmt {:formula "shfmt"}},
    :update [["doom" "upgrade"]],
    :version ["doom" "info"]},
 :ffmpeg {:formula "ffmpeg"},
 :gimp {:formula "gimp"},
 :git {:formula "git",
       :install [["git" "config" "--global" "user.email" "anthony@caumond.com"
                  "git" "config" "--global" "user.name" "Anthony CAUMOND"]]},
 :glpk {:install [["mkdir -p ~/Dev/install" "cd ~/Dev/install"
                   "wget http://ftp.gnu.org/gnu/glpk/glpk-5.0.tar.gz"
                   "tar -xvzf glpk-5.0.tar.gz" "cd glpk-5.0" "./configure"]]},
 :iterm2 {:formula "iterm2",
          :pre-reqs {:coreutils {:formula "coreutils"},
                     :grep {:formula "grep"},
                     :htop {:formula "htop"},
                     :nano {:formula "nano"},
                     :tree {:formula "tree"}}},
 :markdown {:formula "markdown"},
 :node {:formula "node"},
 :os {:clean [["fd" "-H" "-I" "-g" "'**/.DS_Store'" "-x" "rm" "{}"]]},
 :python-projects
   {:pre-reqs {:pip {:install [["python3.11" "-m" "pip" "install" "--upgrade"
                                "pip"]]},
               :pipenv {:package "pipenv", :type :pip3},
               :pyflakes {:package "pyflakes", :type :pip3},
               :python {:formula "python",
                        :pre-reqs {:isort {:package "isort", :type :pip3},
                                   :nose {:package "nose", :type :pip3},
                                   :pytest {:package "pytest", :type :pip3}}},
               :testresources {:package "testresources", :type :pip3},
               :virtualenv {:package "virtualenv", :type :pip3}}},
 :security-tools
   {:description "What is necessary to manage security keys",
    :pre-reqs {:gnupg {:formula "gnupg"},
               :ssh-keygen {:install [["ssh-keygen" "-t" "rsa" "-b" "4096" "-C"
                                       "anthony@caumond.com"]
                                      ["cat" "~/.ssh/id_rsa.pub"]]}}},
 :vim {:formula "vim"},
 :vlc {:formula "vlc"},
 :wget {:formula "wget"},
 :zsh
   {:formula "zsh",
    :pre-reqs
      {:typewritten
         {:install
            [["npm install -g typewritten"]
             ["curl" "-fsSL"
              "https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
              "-o" "ohmyzsh-install.sh"] ["chmod" "+x" "ohmyzsh-install.sh"]
             ["./ohmyzsh-install.sh"] ["rm" "./ohmyzsh-install.sh"]]}}},
 :zsh-env
   {:type :copy-files, :update [["doom" "env"]], :version ["zsh" "--version"]}}
